# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start window numbering at 1
set -g base-index 1

# No delay for escape key press
set -sg escape-time 0

# scrollback size
set -g history-limit 10000

# tmux need to be configured for advertise a 256color term 
set -g default-terminal "screen-256color"

# To ensure keyboard shortcuts inside Vim still work, we need to enable XTerm keybindings.
set-window-option -g xterm-keys on

# powerline
# source ~/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf
source /home/agarrido/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf

# Pretty obvious
bind-key K confirm-before -p "kill-session #S? (y/n)" kill-session

# reload config file (change file location to your the tmux.conf you want to use)
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key R split-window -h "vim ~/.tmux.conf" #use local because profile is not loaded
#bind-key R split-window -h "~/opt/vim81/bin/vim ~/.tmux.conf" #use local because profile is not loaded

# clear tmux history
bind-key C-l confirm-before -p "Clear history? (y/n)" clear-history

# movement
# switch sessions 
bind -T prefix PPage switch-client -p
bind -T prefix NPage switch-client -n

# prefix-L to take back to the last active window.
bind L last-window

# switch windows using prefix C-Insert and C-Supr
bind -n M-DC next-window
bind -n M-IC previous-window

# irssi/firefox inspired quick jump. Alt-{1..9} will jumpt to that window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# switch panes using Alt-arrow without prefix
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# synchronize panes
unbind s
bind -T prefix s setw synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# copy mode 
# easier shortcuts for copy-pasting in Tmux like Vimâ€™s buffers
unbind [ ; bind Escape copy-mode
unbind p ; bind p paste-buffer
unbind-key -T copy-mode C-Space  ;  bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode C-w      ;  bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

#Copy from tmux buffer to system buffer (clipboard)
#https://github.com/tmux/tmux/issues/1079
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
#bind -T copy-mode-vi MouseDown1Pane select-pane ; send-keys -X copy-pipe "pbcopy" ; send-keys -X clear-selection

# copy & paste between tmux and x clipboard
bind -n C-Y run-shell -b "echo #{pane_current_path} | tmux load-buffer -" \; display-message 'pwd copied to clipboard!'
#bind C-y run-shell "tmux set-buffer \'$(xclip -o)\'"
#bind C-y run-shell "tmux show-buffer | xclip -sel clip -i"
#bind -n C-y run-shell -b "tmux save-buffer - | xclip -i -sel clipboard"
#bind -n C-p run-shell -b "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# search in copy mode
# Enter copy mode and start searching in one go
bind-key / copy-mode \; send-key ?

#unbind C-s
#bind-key -T copy-mode C-f command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\"" 

# Enter copy mode when scrolling over a pane
# https://github.com/tmux/tmux/issues/145#issuecomment-151123624
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Enable mouse to select/resize panes and windows (tmux 2.1 and up)
set -g mouse off
# toggle mouse mode to allow native mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mouse  \; display-message "Mouse-mode: #{?mouse,ON,OFF}"
# TODO Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# Tmux Plugin Manager
# Key bindings:
# prefix + I : Installs new plugins from GitHub or any other git repository & refreshes TMUX environment
# prefix + U : Updates plugin(s)
# prefix + alt + u : Remove/uninstall plugins not on the plugin list

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Plug configurations and bindings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
# Rebind the current defaults C-s and C-r to ones that tmux dont even recognize
set -g @resurrect-save 'C-NPage' 
set -g @resurrect-restore 'C-PPage'
# Still use prefix C-s and C-r, but now ask for (y/n) response before saving/restoring.
bind-key -T prefix C-s confirm-before -p 'Save this tmux session? (y/n)' 'run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh'
bind-key -T prefix C-r confirm-before -p 'Resurrect last tmux session? (y/n)' 'run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh'

#By default, tmux-yank will exit copy mode after yanking text. If you wish to remain in copy mode, set @yank_action:
#set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default
set -g @yank_action 'copy-pipe-and-cancel'
#set -g @custom_copy_command 'xclip -sel clipboard -i'
#set -g @override_copy_command 'xclip -sel cli -i'

# Change sidebar command
set -g @sidebar-tree-command 'tree -C -d'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
