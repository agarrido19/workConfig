# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start window numbering at 1
set -g base-index 1

# No delay for escape key press
set -sg escape-time 0

# scrollback size
set -g history-limit 10000

# tmux need to be configured for advertise a 256color term 
set -g default-terminal "screen-256color"

# To ensure keyboard shortcuts inside Vim still work, we need to enable XTerm keybindings.
set-window-option -g xterm-keys on

# powerline
source ~/.local/lib/python2.6/site-packages/powerline/bindings/tmux/powerline.conf

# Pretty obvious
bind-key K confirm-before -p "kill-session #S? (y/n)" kill-session

# reload config file (change file location to your the tmux.conf you want to use)
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key R split-window -h "~/opt/vim8/bin/vim ~/.tmux.conf" #use local because profile is not loaded

# movement
# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R

# switch windows using  Shift-arrow without prefix
#bind -n S-Left  previous-window

# <prefix>-L to take back to the last active window.
bind-key L last-window

# switch sessions using <prefix>-Q or W
bind Q switch-client -p
bind W switch-client -n

# irssi/firefox inspired quick jump. Alt-{1..9} will jumpt to that window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# copy mode 
# easier shortcuts for copy-pasting in Tmux like Vimâ€™s buffers
unbind [ ; bind Escape copy-mode
unbind p ; bind p paste-buffer
unbind-key -T copy-mode C-Space  ;  bind-key -T copy-mode v send-keys -X begin-selection
unbind-key -T copy-mode C-w      ;  bind-key -T copy-mode y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

#Copy from tmux buffer to system buffer (clipboard)
#https://github.com/tmux/tmux/issues/1079
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel\; run "tmux save -|xclip -sel clip >/dev/null 2>&1"

# search in copy mode
unbind C-s
bind-key -T copy-mode C-f command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\"" 

# Enter copy mode when scrolling over a pane
# https://github.com/tmux/tmux/issues/145#issuecomment-151123624
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Enable mouse to select/resize panes and windows (tmux 2.1 and up)
set -g mouse off
# toggle mouse mode to allow native mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# zoom this pane to full screen
#bind + \
#    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
#    swap-pane -s tmux-zoom.0 \;\
#    select-window -t tmux-zoom
# restore this pane
#bind - \
#    last-window \;\
#    swap-pane -s tmux-zoom.0 \;\
#    kill-window -t tmux-zoom

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
